Seccion 5: GifExpertApp - Aplicación.
--------------------------------------

La aplicacion se va a encargar de traer imagenes o gift el API de Giphy. 
(ejemplo en whatsapp cuando busco goku me aparecen todos gif animados de goku)

1 - Leer cajas de texto (inputs)
2 - Realizar peticiones Http -> En un componente que renderiza las imagenes.
3 - Custom hooks, otros hooks
4 - Efectos...

https://developers.giphy.com/docs/api/endpoint/#search

Curso de React de cero a experto:
API Key: UqpQ94dC75D5jIlZtK911Pi7hvvQeeri

https://es.reactjs.org/docs/faq-structure.html
https://hackernoon.com/structuring-projects-and-naming-components-in-react-1261b6e18d76

si no funciona: npm start -> puede ser que no este instalado -> npm install

74. Crear un componente que cuando note que hay un nuevo elemento,
haga la peticion http, traiga las imágenes correspondientes a la categoría
y se desplieguen en la grilla: GifGrid.js

Seccion 7: Generando el build de producción y despliegues en Github Pages.
--------------------------------------------------------------------------
85. Preparación del proyecto - Github Pages: 
ver que en package.json tenemos los scripts de npm, entre ellos el siguiente:
    >> npm run build
Esto crea la carpeta build donde estan todos los archivos para el despliegue.
Este se puede probar montando un server localhost: 
    https://www.npmjs.com/package/http-server
    >> npm install --global http-server
    // esto es para evitar el error: 
    //"no está firmado digitalmente. No se puede ejecutar este script en el sistema actual."    
    >> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser    
    >> http-server -o
    //ojo para entrar de afuera me fije la ip y tuve que desactivar el firewall.
para el despliegue:
- renombrar la carpeta build -> docs
- push con los cambios (sube todo lo que hay en docs)
- vamos a github -> dentro del proyecto -> setings -> pages -> github pages -> 
    none-> master branch /docs folder (Use only the /docs folder for Github Pages).
